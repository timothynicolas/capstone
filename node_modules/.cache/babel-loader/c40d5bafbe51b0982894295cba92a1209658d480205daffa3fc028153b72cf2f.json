{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timot\\\\Desktop\\\\Capstone\\\\capstone\\\\src\\\\components\\\\CountRender.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountRender() {\n  _s();\n  let [value, setValue] = useState('');\n  let renderCount = useRef(0);\n  const changingInput = e => {\n    setValue(e.target.value);\n    renderCount.current++;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changingInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 65\n    }, this), value, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Number of renders: \", renderCount.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(CountRender, \"P31fJT2OephBFEh5oTx3S60gd6I=\");\n_c = CountRender;\nexport default CountRender;\nvar _c;\n$RefreshReg$(_c, \"CountRender\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","CountRender","_s","value","setValue","renderCount","changingInput","e","target","current","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/timot/Desktop/Capstone/capstone/src/components/CountRender.js"],"sourcesContent":["import {useState, useRef} from 'react'; \r\n\r\nfunction CountRender(){\r\n    let [value, setValue] = useState('');\r\n    let renderCount = useRef(0);\r\n\r\n    const changingInput = (e) => {\r\n        setValue(e.target.value)\r\n        renderCount.current++;\r\n    }\r\n    return(\r\n        <div>\r\n            <input type='text' onChange={changingInput}></input><br/>\r\n            {value}\r\n            <br/>\r\n            <p> Number of renders: {renderCount.current}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountRender;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAClB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAIQ,WAAW,GAAGP,MAAM,CAAC,CAAC,CAAC;EAE3B,MAAMQ,aAAa,GAAIC,CAAC,IAAK;IACzBH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;IACxBE,WAAW,CAACI,OAAO,EAAE;EACzB,CAAC;EACD,oBACIT,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAOW,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEN;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAAAhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxDb,KAAK,eACNH,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLhB,OAAA;MAAAU,QAAA,GAAG,sBAAoB,EAACL,WAAW,CAACI,OAAO;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACd,EAAA,CAhBQD,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AAkBpB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}